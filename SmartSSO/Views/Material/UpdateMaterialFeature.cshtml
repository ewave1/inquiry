@model Data.Entities.MaterialFeatureModel

@{
    // ViewBag.Title = "维护特殊配方";
    List<SelectListItem> nonList = new List<SelectListItem>();
}

<div class="row">

    <div class="col-md-3">

        @Html.Partial("Shared/_QuickMenu")

    </div>
    <div class="col-md-9 ">

        <ol class="breadcrumb">
            <li><a href="/Material">材料管理</a></li>
            <li class="active">@ViewBag.Title</li>
        </ol>

        <div class="container">


            @using (Html.BeginForm("UpdateMaterialFeature", "Material", new { bag = Json.Encode(ViewBag) }, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(Model => Model.Type)
        <div class="form-group">
            @Html.LabelFor(model => model.Code, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Code, new { @class = "form-control", style = "width: 280px" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MaterialCode, new { @class = "col-md-2 control-label" })

            <div class="col-md-6">
                @Html.DropDownListFor(model => model.MaterialCode, nonList, new { @class = "form-control", style = "width: 280px" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hardness, new { @class = "col-md-2 control-label" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.Hardness, nonList, new { @class = "form-control", style = "width: 280px" })
            </div>
        </div>


        <div class="form-group">
            <label class="col-md-2 control-label" for="Name">@ViewBag.ColumnName</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", style = "width: 280px" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Discount, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Discount, new { @class = "form-control", style = "width: 280px" })
            </div>
        </div>
if (ViewBag.Type == 2)
{
        <div class="form-group">
            @Html.LabelFor(model => model.IsDefault, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsDefault, new { @class = "form-control", style = "width: 280px" })
            </div>
        </div>
}

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ValidationSummary(false)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary">@(ViewBag.CommitName )</button>
                <a href="/Material/MaterialFeatureList?type=@ViewBag.Type" class="btn btn-default">取消</a>
            </div>
        </div>

}
        </div>
    </div>
</div>

<script src="~/Scripts/material.js"></script>
<script>


    $(function () {
        //初始化数据
        loadMaterial(changeMaterial);
        //绑定事件
        $('#MaterialCode').change(changeMaterial);

    })
</script>